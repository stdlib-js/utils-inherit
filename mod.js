// Copyright (c) 2023 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
var e="function"==typeof Object.defineProperty?Object.defineProperty:null;var t=Object.defineProperty,r=Object.prototype,o=r.toString,n=r.__defineGetter__,a=r.__defineSetter__,i=r.__lookupGetter__,l=r.__lookupSetter__;var u=function(){try{return e({},"x",{}),!0}catch(e){return!1}}()?t:function(e,t,u){var c,p,f,_;if("object"!=typeof e||null===e||"[object Array]"===o.call(e))throw new TypeError("invalid argument. First argument must be an object. Value: `"+e+"`.");if("object"!=typeof u||null===u||"[object Array]"===o.call(u))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+u+"`.");if((p="value"in u)&&(i.call(e,t)||l.call(e,t)?(c=e.__proto__,e.__proto__=r,delete e[t],e[t]=u.value,e.__proto__=c):e[t]=u.value),f="get"in u,_="set"in u,p&&(f||_))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return f&&n&&n.call(e,t,u.get),_&&a&&a.call(e,t,u.set),e};function c(){var e,t=arguments,r=t[0],o="https://stdlib.io/e/"+r+"?";for(e=1;e<t.length;e++)o+="&arg[]="+encodeURIComponent(t[e]);return o}function p(e){var t=typeof e;return null===e||"object"!==t&&"function"!==t?new TypeError(c("0k5C1",e)):null}var f=Object.create;function _(){}var y="function"==typeof f?f:function(e){return _.prototype=e,new _};function b(e,t){var r=p(e);if(r)throw r;if(r=p(t))throw r;if(void 0===t.prototype)throw new TypeError(c("0k5C0",t.prototype));return e.prototype=y(t.prototype),u(e.prototype,"constructor",{configurable:!0,enumerable:!1,writable:!0,value:e}),e}export{b as default};
//# sourceMappingURL=mod.js.map
